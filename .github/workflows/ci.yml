name: CI

on:
  push:
    branches: [master, staging, trying, release-*]
  pull_request:
    branches: [master, release-*]

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo check --all-features

  test:
    needs: [check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo test --all-features

  clippy:
    needs: [check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - run: cargo clippy --all-features

  fmt:
    name: Formatting
    needs: [check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - run: cargo fmt --all -- --check

  check-advisories:
    needs: [check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - run: cargo install cargo-deny
      - run: cargo deny check advisories

  check-bans:
    runs-on: ubuntu-latest
    needs: [check]
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - run: cargo install cargo-deny
      - run: cargo deny check bans

  check-licenses:
    runs-on: ubuntu-latest
    needs: [check]
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - run: cargo install cargo-deny
      - run: cargo deny check licenses

  check-sources:
    runs-on: ubuntu-latest
    needs: [check]
    strategy:
      matrix:
        rust:
          - 1.67.1
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - run: cargo install cargo-deny
      - run: cargo deny check sources

  # We need some "accummulation" job here because bors fails (timeouts) to
  # listen on matrix builds.
  # Hence, we have some kind of dummy here that bors can listen on
  ci-success:
    name: CI
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs:
      - check
      - test
      - clippy
      - fmt
    steps:
      - name: CI succeeded
        run: exit 0
